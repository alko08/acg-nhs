void newdrive (int x , int y, int z){
	x = normalizeForDrive(x);
	y = normalizeForDrive(y);

	 if(y/x>1 || y/x<-1){
	   RightLeftDrive(y, y);//side/side
	 }else if(x/y>1 || x/y<-1){
	 	 FrontRearDrive(x, x); //forwards/backwards
	 }else if(z<-1){
	  CyclicDrive(-80, -80);
	 }else if(z>1){
	 	 CyclicDrive(80, 80);
	 }else{
	   FrontRearDrive(0, 0);
	 }

}


void RightLeftDrive (int leftPower, int rightPower) { //this does mechanum wheel side to side motion
	leftPower = roundMotorValues(leftPower); //prevents input from being over 100 and under -100
	rightPower = roundMotorValues(rightPower);

	motor[frontLeft] = rightPower; motor[backLeft] = rightPower;
	motor[frontRight] = leftPower; motor[backRight] = -leftPower; //back right motor is probably miswired or misconfigured
}


void armCtrl(int dir){
	int down;
	int up;
	if(abs(dir) == dir){ //if postive (up)
		down = 0;
		up = 1;
	} else { // if negative (down)
		down = 1;
		up = 0;
	}
	dir = abs(dir);
	for(int i=0; i<dir; i++){
		joyButtonArmMov(down, up);
		wait10Msec(2.5);
	}
	joyButtonArmMov(0, 0);
}

//*****************************************Arm Functions**************************************************************************
int armPower = 15; //default and max power. Should be a multiple of 5 for niceness

void joyButtonArmMov(int button1Down, int button2Down) { //takes in joystick controls for arm movement
	int x = button1Down;
	int y = button2Down;

	if(x == 1  && SensorValue(armDown) == 0) {
		motor[armBranchTurner] = armPower;
	} else if(y == 1 && SensorValue(armUp) == 0) {
		motor[armBranchTurner] = armPower*-1;
	} else {
		motor[armBranchTurner] = 0;
	}
}

//------------------------------------------
int handPower = 20; //starting hand power

void joyButtonHandMov(int button1Down, int button2Down) { //moves "hand" that takes in/drops balls
	int x = button1Down;
	int y = button2Down;

	if(x == 1) {
		motor[nxtHandMtr] = handPower; //move bucket up
	} else if(y == 1) {
		motor[nxtHandMtr] = handPower*-1; //move bucket down
	} else {
		motor[nxtHandMtr] = 0;
	}
}
